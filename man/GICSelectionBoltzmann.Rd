% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GICSelection_Boltzmann.R
\name{GICSelectionBoltzmann}
\alias{GICSelectionBoltzmann}
\title{Perform Boltzmann-based Variable Selection}
\usage{
GICSelectionBoltzmann(
  X,
  Y,
  Init_Columns,
  Calculate_GIC,
  Calculate_GIC_short,
  T = 0.2,
  Nsim = 2
)
}
\arguments{
\item{X}{Design matrix (numeric).}

\item{Y}{Outcome vector (numeric).}

\item{Init_Columns}{Initial subset of feature indices (integer vector).}

\item{Calculate_GIC}{Name of the Julia function to calculate GIC (string).}

\item{Calculate_GIC_short}{Name of the Julia function for short GIC updates (string).}

\item{T}{Temperature parameter controlling the randomness of updates (default 0.2).}

\item{Nsim}{Number of times to repeat the selection process (default 2).}
}
\value{
A list containing GIC values and corresponding coefficients.
}
\description{
This function performs GIC-based variable selection using a Boltzmann-like
simulated annealing approach, which is implemented in Julia. The method
uses temperature control for randomness in the variable selection process.
}
\examples{
# Example usage:
X <- matrix(rnorm(100), ncol = 10)  # Random design matrix with 10 features
Y <- rnorm(10)  # Random outcome vector
result <- GICSelectionBoltzmann(X, Y, Init_Columns = 1:5,
                                 Calculate_GIC = "Calculate_BIC",
                                 Calculate_GIC_short = "Calculate_BIC_short")
print(result)

}
