% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LPtoY.R
\name{LP_to_Y}
\alias{LP_to_Y}
\title{Transform Linear Predictor to Response}
\usage{
LP_to_Y(
  X,
  true_beta,
  family = "Normal",
  n_trials = NULL,
  std = NULL,
  shape = NULL,
  cov_matrix = NULL,
  n_categories = NULL
)
}
\arguments{
\item{X}{A numeric design matrix.}

\item{true_beta}{A numeric vector or matrix of true coefficients.}

\item{family}{A character string specifying the distribution family.}

\item{n_trials}{Optional integer, number of trials for the Binomial family.}

\item{std}{Optional numeric, standard deviation for the Normal family.}

\item{shape}{Optional numeric, shape parameter for the Gamma family.}

\item{cov_matrix}{Optional covariance matrix for multivariate families.}

\item{n_categories}{Optional integer, number of categories for Multinomial family.}
}
\value{
A numeric vector or matrix of responses generated from the linear predictor.
}
\description{
Converts a linear predictor to observed responses using canonical link functions from
generalized linear models (GLMs). Supports univariate and multivariate distributions.
}
\details{
This function uses the Julia backend via the 'JuliaCall' interface to compute responses
from linear predictors efficiently. Supported families include:
\itemize{
\item "Normal" (Gaussian)
\item "Poisson"
\item "Bernoulli"
\item "Gamma"
\item "MultivariateNormal"
\item "Multinomial" (optional)
}
GLM stands for \emph{generalized linear model}.
}
\examples{
\dontrun{
if (interactive() && requireNamespace("JuliaCall", quietly = TRUE)) {
  julia_ready <- FALSE
  tryCatch({
    JuliaCall::julia_setup(installJulia = FALSE)
    julia_ready <- TRUE
  }, error = function(e) message("Julia setup failed"))

  if (julia_ready) {
    set.seed(123)
    n <- 100
    p <- 5
    X <- matrix(rnorm(n * p), n, p)
    beta <- c(1.5, -2, 0, 0, 3)
    Y <- LP_to_Y(X, beta, family = "Normal", std = 1.0)
    head(Y)
  }
}
}

}
